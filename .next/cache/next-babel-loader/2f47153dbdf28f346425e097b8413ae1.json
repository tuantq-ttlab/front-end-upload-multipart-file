{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/macos/Documents/learn/aws-upload/aws-s3-multipart-upload/frontend/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport sortBy from \"lodash/sortBy\";\n\nvar Index = /*#__PURE__*/function (_Component) {\n  _inherits(Index, _Component);\n\n  var _super = _createSuper(Index);\n\n  function Index(props) {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      fileSelected: null,\n      uploadId: \"\",\n      uploadUrls: [],\n      totalParts: 1,\n      fileName: \"\",\n      backendUrl: \"https://shz-dev.tokyotechlab.com/api/shz\"\n    };\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"fileHandler\",\n    value: function () {\n      var _fileHandler = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(event) {\n        var fileSelected, fileName;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                try {\n                  fileSelected = event.target.files[0];\n                  fileName = fileSelected.name;\n                  this.setState({\n                    fileSelected: fileSelected\n                  });\n                  this.setState({\n                    fileName: fileName\n                  });\n                } catch (err) {\n                  console.error(err, err.message);\n                }\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function fileHandler(_x) {\n        return _fileHandler.apply(this, arguments);\n      }\n\n      return fileHandler;\n    }()\n  }, {\n    key: \"startUpload\",\n    value: function () {\n      var _startUpload = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(event) {\n        var _resp$data, _resp$data$data, CHUNK_SIZE, fileSize, CHUNKS_COUNT, params, resp, _resp$data$data$presi, uploadMultipartVideoUrls;\n\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                event.preventDefault();\n                CHUNK_SIZE = 1024 * 1000 * 200; // 200MB\n\n                fileSize = this.state.fileSelected.size;\n                CHUNKS_COUNT = Math.floor(fileSize / CHUNK_SIZE) + 1;\n                params = {\n                  videoName: this.state.fileName,\n                  scheduleId: 3506,\n                  deviceId: 75,\n                  logFile: \"logFile.log\",\n                  totalParts: CHUNKS_COUNT\n                };\n                _context2.next = 8;\n                return axios.post(\"\".concat(this.state.backendUrl, \"/video\"), {}, {\n                  data: _objectSpread(_objectSpread({}, params), {}, {\n                    totalParts: 2\n                  }),\n                  headers: {\n                    Authorization: \"le2yqnuADp9e3k60cYxkHNW5VhRLLXNGevGR0anVP0xNlMvxeMtqgZ5UKBD7J9D9O6tEWIOqXTuSSyuP1JY6QxevH1PdTljqOBEaJu9G7G3MxAqCULK792XhcT3r1YsAov3WsquY3v7w6YSGg2V5Bk392yjDJ0Q3EMxKIqf2kb43Drq0hRlFI7Zg5ry1FIVkZeSW9cmaR8MUEsFnGMKr6tNYw6Hp2GRYq1mUdbdP6uKI1TUP87vxfV7dhKEzTst\"\n                  }\n                });\n\n              case 8:\n                resp = _context2.sent;\n                console.log(resp === null || resp === void 0 ? void 0 : resp.data);\n                _resp$data$data$presi = resp === null || resp === void 0 ? void 0 : (_resp$data = resp.data) === null || _resp$data === void 0 ? void 0 : (_resp$data$data = _resp$data.data) === null || _resp$data$data === void 0 ? void 0 : _resp$data$data.presignedLink, uploadMultipartVideoUrls = _resp$data$data$presi.uploadMultipartVideoUrls;\n                this.setState(_objectSpread(_objectSpread({}, this.state), {}, {\n                  uploadUrls: uploadMultipartVideoUrls.uploadUrls,\n                  uploadId: uploadMultipartVideoUrls.uploadId,\n                  totalParts: CHUNKS_COUNT\n                })); // this.uploadMultipartFile();\n\n                _context2.next = 17;\n                break;\n\n              case 14:\n                _context2.prev = 14;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.log(_context2.t0);\n\n              case 17:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 14]]);\n      }));\n\n      function startUpload(_x2) {\n        return _startUpload.apply(this, arguments);\n      }\n\n      return startUpload;\n    }()\n  }, {\n    key: \"uploadMultipartFile\",\n    value: function () {\n      var _uploadMultipartFile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var _this$state$uploadUrl, eTags, start, end, blob, totalParts, index, _this$state$uploadUrl2, part, url, result, headers, completeUploadResp;\n\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                eTags = [];\n                totalParts = this.state.totalParts;\n\n                if (!((_this$state$uploadUrl = this.state.uploadUrls) !== null && _this$state$uploadUrl !== void 0 && _this$state$uploadUrl.length)) {\n                  _context3.next = 19;\n                  break;\n                }\n\n                index = 0;\n\n              case 5:\n                if (!(index < ((_this$state$uploadUrl2 = this.state.uploadUrls) === null || _this$state$uploadUrl2 === void 0 ? void 0 : _this$state$uploadUrl2.length))) {\n                  _context3.next = 19;\n                  break;\n                }\n\n                part = this.state.uploadUrls[index].part;\n                url = this.state.uploadUrls[index].url;\n                start = (part - 1) * 1024 * 1000 * 200;\n                end = part * 1024 * 1000 * 200;\n                blob = part < totalParts ? this.state.fileSelected.slice(start, end) : this.state.fileSelected.slice(start);\n                _context3.next = 13;\n                return axios.put(url, blob, {\n                  headers: {\n                    \"Content-Type\": this.state.fileSelected.type\n                  }\n                });\n\n              case 13:\n                result = _context3.sent;\n                headers = result.headers;\n                eTags.push({\n                  ETag: headers.etag,\n                  PartNumber: part\n                });\n\n              case 16:\n                index++;\n                _context3.next = 5;\n                break;\n\n              case 19:\n                _context3.next = 21;\n                return axios.post(\"\".concat(this.state.backendUrl, \"/complete-upload\"), {}, {\n                  data: {\n                    videoName: this.state.fileName,\n                    parts: sortBy(eTags, [\"PartNumber\"]),\n                    uploadId: this.state.uploadId\n                  }\n                });\n\n              case 21:\n                completeUploadResp = _context3.sent;\n                console.log(completeUploadResp.data, \"complete upload response\");\n                _context3.next = 28;\n                break;\n\n              case 25:\n                _context3.prev = 25;\n                _context3.t0 = _context3[\"catch\"](0);\n                console.log(_context3.t0);\n\n              case 28:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 25]]);\n      }));\n\n      function uploadMultipartFile() {\n        return _uploadMultipartFile.apply(this, arguments);\n      }\n\n      return uploadMultipartFile;\n    }()\n  }, {\n    key: \"getData\",\n    value: function () {\n      var _getData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var resp;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return axios.get(\"\".concat(this.state.backendUrl, \"/api/v1/file/62c3b627d34caccddce9dbad\"));\n\n              case 2:\n                resp = _context4.sent;\n                console.log(resp);\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getData() {\n        return _getData.apply(this, arguments);\n      }\n\n      return getData;\n    }()\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {// this.getData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        style: {\n          backgroundColor: \"grey\",\n          height: 1500\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 7\n        }\n      }, __jsx(\"form\", {\n        onSubmit: this.startUpload.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 9\n        }\n      }, __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }\n      }, __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }\n      }, \"Upload Dataset:\"), __jsx(\"input\", {\n        type: \"file\",\n        id: \"file\",\n        onChange: this.fileHandler.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }\n      }), __jsx(\"button\", {\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }\n      }, \"Upload\"))));\n    }\n  }]);\n\n  return Index;\n}(Component);\n\nexport { Index as default };","map":{"version":3,"names":["React","Component","axios","sortBy","Index","props","state","fileSelected","uploadId","uploadUrls","totalParts","fileName","backendUrl","event","target","files","name","setState","err","console","error","message","preventDefault","CHUNK_SIZE","fileSize","size","CHUNKS_COUNT","Math","floor","params","videoName","scheduleId","deviceId","logFile","post","data","headers","Authorization","resp","log","presignedLink","uploadMultipartVideoUrls","eTags","length","index","part","url","start","end","blob","slice","put","type","result","push","ETag","etag","PartNumber","parts","completeUploadResp","get","backgroundColor","height","startUpload","bind","fileHandler"],"sources":["/Users/macos/Documents/learn/aws-upload/aws-s3-multipart-upload/frontend/pages/index.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport sortBy from \"lodash/sortBy\";\n\nexport default class Index extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fileSelected: null,\n      uploadId: \"\",\n      uploadUrls: [],\n      totalParts: 1,\n      fileName: \"\",\n      backendUrl: \"https://shz-dev.tokyotechlab.com/api/shz\",\n    };\n  }\n\n  async fileHandler(event) {\n    try {\n      let fileSelected = event.target.files[0];\n      let fileName = fileSelected.name;\n      this.setState({ fileSelected });\n      this.setState({ fileName });\n    } catch (err) {\n      console.error(err, err.message);\n    }\n  }\n\n  async startUpload(event) {\n    try {\n      event.preventDefault();\n      const CHUNK_SIZE = 1024 * 1000 * 200; // 200MB\n      const fileSize = this.state.fileSelected.size;\n      const CHUNKS_COUNT = Math.floor(fileSize / CHUNK_SIZE) + 1;\n\n      const params = {\n        videoName: this.state.fileName,\n        scheduleId: 3506,\n        deviceId: 75,\n        logFile: \"logFile.log\",\n        totalParts: CHUNKS_COUNT,\n      };\n\n      let resp = await axios.post(\n        `${this.state.backendUrl}/video`,\n        {},\n        {\n          data: { ...params, totalParts: 2 },\n          headers:{\n            Authorization :\"le2yqnuADp9e3k60cYxkHNW5VhRLLXNGevGR0anVP0xNlMvxeMtqgZ5UKBD7J9D9O6tEWIOqXTuSSyuP1JY6QxevH1PdTljqOBEaJu9G7G3MxAqCULK792XhcT3r1YsAov3WsquY3v7w6YSGg2V5Bk392yjDJ0Q3EMxKIqf2kb43Drq0hRlFI7Zg5ry1FIVkZeSW9cmaR8MUEsFnGMKr6tNYw6Hp2GRYq1mUdbdP6uKI1TUP87vxfV7dhKEzTst\"\n          }\n        }\n      );\n      console.log(resp?.data)\n      const { uploadMultipartVideoUrls } = resp?.data?.data?.presignedLink;\n      this.setState({\n        ...this.state,\n        uploadUrls: uploadMultipartVideoUrls.uploadUrls,\n        uploadId: uploadMultipartVideoUrls.uploadId,\n        totalParts: CHUNKS_COUNT,\n      });\n      // this.uploadMultipartFile();\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async uploadMultipartFile() {\n    try {\n      const eTags = [];\n      let start, end, blob;\n      const { totalParts } = this.state;\n\n      if (this.state.uploadUrls?.length) {\n        for (let index = 0; index < this.state.uploadUrls?.length; index++) {\n          const part = this.state.uploadUrls[index].part\n          const url = this.state.uploadUrls[index].url\n\n          start = (part - 1) * 1024 * 1000 * 200;\n          end = part * 1024 * 1000 * 200;\n          blob =\n            part < totalParts\n              ? this.state.fileSelected.slice(start, end)\n              : this.state.fileSelected.slice(start);\n          const result = await axios.put(url, blob, {\n            headers: {\n              \"Content-Type\": this.state.fileSelected.type,\n            },\n          });\n          const { headers } = result;\n          eTags.push({\n            ETag: headers.etag,\n            PartNumber: part,\n          });\n        }\n      }\n\n      let completeUploadResp = await axios.post(\n        `${this.state.backendUrl}/complete-upload`,\n        {},\n        {\n          data: {\n            videoName: this.state.fileName,\n            parts: sortBy(eTags, [\"PartNumber\"]),\n            uploadId: this.state.uploadId,\n          },\n        }\n      );\n\n      console.log(completeUploadResp.data, \"complete upload response\");\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async getData() {\n    const resp = await axios.get(\n      `${this.state.backendUrl}/api/v1/file/62c3b627d34caccddce9dbad`\n    );\n    console.log(resp);\n  }\n\n  componentDidMount() {\n    // this.getData();\n  }\n  render() {\n    return (\n      <div style={{ backgroundColor: \"grey\", height: 1500 }}>\n        <form onSubmit={this.startUpload.bind(this)}>\n          <div>\n            <p>Upload Dataset:</p>\n            <input\n              type=\"file\"\n              id=\"file\"\n              onChange={this.fileHandler.bind(this)}\n            />\n            <button type=\"submit\">Upload</button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}