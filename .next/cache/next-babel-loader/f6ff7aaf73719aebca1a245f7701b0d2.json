{"ast":null,"code":"var _jsxFileName = \"/Users/macos/Documents/learn/aws-upload/aws-s3-multipart-upload/frontend/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport sortBy from \"lodash/sortBy\";\nexport default class Index extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fileSelected: null,\n      uploadId: \"\",\n      uploadUrls: [],\n      totalParts: 1,\n      fileName: \"\",\n      backendUrl: \"https://shz-dev.tokyotechlab.com/api/shz\"\n    };\n  }\n\n  async fileHandler(event) {\n    try {\n      let fileSelected = event.target.files[0];\n      let fileName = fileSelected.name;\n      this.setState({\n        fileSelected\n      });\n      this.setState({\n        fileName\n      });\n    } catch (err) {\n      console.error(err, err.message);\n    }\n  }\n\n  async startUpload(event) {\n    try {\n      var _resp$data, _resp$data$data;\n\n      event.preventDefault();\n      const CHUNK_SIZE = 1024 * 1000 * 200; // 200MB\n\n      const fileSize = this.state.fileSelected.size;\n      const CHUNKS_COUNT = Math.floor(fileSize / CHUNK_SIZE) + 1;\n      const params = {\n        videoName: this.state.fileName,\n        scheduleId: 3506,\n        deviceId: 75,\n        logFile: \"logFile.log\",\n        totalParts: CHUNKS_COUNT\n      };\n      let resp = await axios.post(`${this.state.backendUrl}/video`, {}, {\n        data: _objectSpread({}, params),\n        headers: {\n          Authorization: \"le2yqnuADp9e3k60cYxkHNW5VhRLLXNGevGR0anVP0xNlMvxeMtqgZ5UKBD7J9D9O6tEWIOqXTuSSyuP1JY6QxevH1PdTljqOBEaJu9G7G3MxAqCULK792XhcT3r1YsAov3WsquY3v7w6YSGg2V5Bk392yjDJ0Q3EMxKIqf2kb43Drq0hRlFI7Zg5ry1FIVkZeSW9cmaR8MUEsFnGMKr6tNYw6Hp2GRYq1mUdbdP6uKI1TUP87vxfV7dhKEzTst\"\n        }\n      });\n      const {\n        uploadMultipartVideoUrls\n      } = resp === null || resp === void 0 ? void 0 : (_resp$data = resp.data) === null || _resp$data === void 0 ? void 0 : (_resp$data$data = _resp$data.data) === null || _resp$data$data === void 0 ? void 0 : _resp$data$data.presignedLink;\n      this.setState(_objectSpread(_objectSpread({}, this.state), {}, {\n        uploadUrls: uploadMultipartVideoUrls.uploadUrls,\n        uploadId: uploadMultipartVideoUrls.uploadId,\n        totalParts: CHUNKS_COUNT\n      }));\n      this.uploadMultipartFile();\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async uploadMultipartFile() {\n    try {\n      var _this$state$uploadUrl;\n\n      const eTags = [];\n      let start, end, blob;\n      const {\n        totalParts\n      } = this.state;\n\n      if ((_this$state$uploadUrl = this.state.uploadUrls) !== null && _this$state$uploadUrl !== void 0 && _this$state$uploadUrl.length) {\n        for (let index = 0; index < ((_this$state$uploadUrl2 = this.state.uploadUrls) === null || _this$state$uploadUrl2 === void 0 ? void 0 : _this$state$uploadUrl2.length); index++) {\n          var _this$state$uploadUrl2;\n\n          const part = this.state.uploadUrls[index].part;\n          const url = this.state.uploadUrls[index].url;\n          start = (part - 1) * 1024 * 1000 * 200;\n          end = part * 1024 * 1000 * 200;\n          blob = part < totalParts ? this.state.fileSelected.slice(start, end) : this.state.fileSelected.slice(start);\n          const result = await axios.put(url, blob, {\n            headers: {\n              \"Content-Type\": this.state.fileSelected.type\n            }\n          });\n          const {\n            headers\n          } = result;\n          eTags.push({\n            ETag: headers.etag,\n            PartNumber: part\n          });\n        }\n      }\n\n      let completeUploadResp = await axios.post(`${this.state.backendUrl}/complete-upload`, {}, {\n        data: {\n          videoName: this.state.fileName,\n          parts: sortBy(eTags, [\"PartNumber\"]),\n          uploadId: this.state.uploadId\n        }\n      });\n      console.log(completeUploadResp.data, \"complete upload response\");\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async getData() {\n    const resp = await axios.get(`${this.state.backendUrl}/api/v1/file/62c3b627d34caccddce9dbad`);\n    console.log(resp);\n  }\n\n  componentDidMount() {// this.getData();\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      style: {\n        backgroundColor: \"grey\",\n        height: 1500\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }\n    }, __jsx(\"form\", {\n      onSubmit: this.startUpload.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }, \"Upload Dataset:\"), __jsx(\"input\", {\n      type: \"file\",\n      id: \"file\",\n      onChange: this.fileHandler.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    }), __jsx(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }, \"Upload\"))));\n  }\n\n}","map":{"version":3,"names":["React","Component","axios","sortBy","Index","constructor","props","state","fileSelected","uploadId","uploadUrls","totalParts","fileName","backendUrl","fileHandler","event","target","files","name","setState","err","console","error","message","startUpload","preventDefault","CHUNK_SIZE","fileSize","size","CHUNKS_COUNT","Math","floor","params","videoName","scheduleId","deviceId","logFile","resp","post","data","headers","Authorization","uploadMultipartVideoUrls","presignedLink","uploadMultipartFile","log","eTags","start","end","blob","length","index","part","url","slice","result","put","type","push","ETag","etag","PartNumber","completeUploadResp","parts","getData","get","componentDidMount","render","backgroundColor","height","bind"],"sources":["/Users/macos/Documents/learn/aws-upload/aws-s3-multipart-upload/frontend/pages/index.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport sortBy from \"lodash/sortBy\";\n\nexport default class Index extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fileSelected: null,\n      uploadId: \"\",\n      uploadUrls: [],\n      totalParts: 1,\n      fileName: \"\",\n      backendUrl: \"https://shz-dev.tokyotechlab.com/api/shz\",\n    };\n  }\n\n  async fileHandler(event) {\n    try {\n      let fileSelected = event.target.files[0];\n      let fileName = fileSelected.name;\n      this.setState({ fileSelected });\n      this.setState({ fileName });\n    } catch (err) {\n      console.error(err, err.message);\n    }\n  }\n\n  async startUpload(event) {\n    try {\n      event.preventDefault();\n      const CHUNK_SIZE = 1024 * 1000 * 200; // 200MB\n      const fileSize = this.state.fileSelected.size;\n      const CHUNKS_COUNT = Math.floor(fileSize / CHUNK_SIZE) + 1;\n\n      const params = {\n        videoName: this.state.fileName,\n        scheduleId: 3506,\n        deviceId: 75,\n        logFile: \"logFile.log\",\n        totalParts: CHUNKS_COUNT,\n      };\n\n      let resp = await axios.post(\n        `${this.state.backendUrl}/video`,\n        {},\n        {\n          data: { ...params },\n          headers:{\n            Authorization :\"le2yqnuADp9e3k60cYxkHNW5VhRLLXNGevGR0anVP0xNlMvxeMtqgZ5UKBD7J9D9O6tEWIOqXTuSSyuP1JY6QxevH1PdTljqOBEaJu9G7G3MxAqCULK792XhcT3r1YsAov3WsquY3v7w6YSGg2V5Bk392yjDJ0Q3EMxKIqf2kb43Drq0hRlFI7Zg5ry1FIVkZeSW9cmaR8MUEsFnGMKr6tNYw6Hp2GRYq1mUdbdP6uKI1TUP87vxfV7dhKEzTst\"\n          }\n        }\n      );\n      const { uploadMultipartVideoUrls } = resp?.data?.data?.presignedLink;\n      this.setState({\n        ...this.state,\n        uploadUrls: uploadMultipartVideoUrls.uploadUrls,\n        uploadId: uploadMultipartVideoUrls.uploadId,\n        totalParts: CHUNKS_COUNT,\n      });\n      this.uploadMultipartFile();\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async uploadMultipartFile() {\n    try {\n      const eTags = [];\n      let start, end, blob;\n      const { totalParts } = this.state;\n\n      if (this.state.uploadUrls?.length) {\n        for (let index = 0; index < this.state.uploadUrls?.length; index++) {\n          const part = this.state.uploadUrls[index].part\n          const url = this.state.uploadUrls[index].url\n\n          start = (part - 1) * 1024 * 1000 * 200;\n          end = part * 1024 * 1000 * 200;\n          blob =\n            part < totalParts\n              ? this.state.fileSelected.slice(start, end)\n              : this.state.fileSelected.slice(start);\n          const result = await axios.put(url, blob, {\n            headers: {\n              \"Content-Type\": this.state.fileSelected.type,\n            },\n          });\n          const { headers } = result;\n          eTags.push({\n            ETag: headers.etag,\n            PartNumber: part,\n          });\n        }\n      }\n\n      let completeUploadResp = await axios.post(\n        `${this.state.backendUrl}/complete-upload`,\n        {},\n        {\n          data: {\n            videoName: this.state.fileName,\n            parts: sortBy(eTags, [\"PartNumber\"]),\n            uploadId: this.state.uploadId,\n          },\n        }\n      );\n\n      console.log(completeUploadResp.data, \"complete upload response\");\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async getData() {\n    const resp = await axios.get(\n      `${this.state.backendUrl}/api/v1/file/62c3b627d34caccddce9dbad`\n    );\n    console.log(resp);\n  }\n\n  componentDidMount() {\n    // this.getData();\n  }\n  render() {\n    return (\n      <div style={{ backgroundColor: \"grey\", height: 1500 }}>\n        <form onSubmit={this.startUpload.bind(this)}>\n          <div>\n            <p>Upload Dataset:</p>\n            <input\n              type=\"file\"\n              id=\"file\"\n              onChange={this.fileHandler.bind(this)}\n            />\n            <button type=\"submit\">Upload</button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}